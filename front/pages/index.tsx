import Head from "next/head";
import Paragraph from "../components/paragraph";
import Title from "../components/title";
import styles from "../styles/Home.module.css";
import FormSection from "../components/formSection";
import FormRow from "../components/formRow";
import React from "react";
import { useForm, SubmitHandler } from "react-hook-form";
import type { NextPage } from "next";
import InputComponent from "../components/InputComponent";
import ValidationButton from "../components/validationButton";
import Select from "../components/Select";

type Inputs = {
  firstName: string;
  givenName: string;
  email: string;
  tel: string;
  Select: string;
  phoneYear: string;
};

const PAGE_TITLE = "Phone Coop: Recyclez votre téléphone";
const SELECT_TITLE = "--Veuillez choisir votre marque--";
const PHONES_OPTIONS = ["Fairphone", "Wiko", "Samsung", "Apple", "Huawei", "Xiaomi", "OnePlus", "Autre"];

const Home: NextPage = () => {
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm<Inputs>();
  const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data);

  return (
    <div className={styles.container}>
      <Head>
        <title>{PAGE_TITLE}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Title level={1}>{PAGE_TITLE}</Title>
        <Paragraph>
          Le principe est simple, je rempli le formulaire, j&quot;obtiens un
          ticket que je peux utiliser pour déposer mon téléphone usage sur une
          borne de recyclage et obtenir un bon d&quot;achat pour un téléphone
          responsable (ex FairPhone).
        </Paragraph>
        <Title level={2}>Je complète le formulaire</Title>

        <form onSubmit={handleSubmit(onSubmit)}>
          <FormSection
            title={"Veuillez indiquer vos informations personnelles : "}
          >
            <FormRow
              label={"Nom"}
              errorMessages={errors.firstName?.message ? ["Nom requis"] : []}
            >
              <InputComponent
                type="text"
                autoComplete="first-name"
                defaultValue=""
                {...register("firstName", { required: false })}
              />
            </FormRow>
            <FormRow
              label={"Prénom"}
              errorMessages={errors.givenName?.message ? ["Prénom requis"] : []}
            >
              <InputComponent
                type="text"
                autoComplete="given-name"
                defaultValue=""
                {...register("givenName", { required: false })}
              />
            </FormRow>
            <FormRow
              label={"Courriel"}
              errorMessages={errors.email?.message ? ["Courriel requis"] : []}
            >
              <InputComponent
                type="text"
                autoComplete="email"
                defaultValue=""
                {...register("email", { required: false })}
              />
            </FormRow>
            <FormRow
              label={"Téléphone"}
              errorMessages={errors.tel?.message ? ["Téléphone requis"] : []}
            >
              <InputComponent
                type="text"
                autoComplete="tel"
                defaultValue=""
                {...register("tel", { required: false })}
              />
            </FormRow>
          </FormSection>
          <FormSection
            title={"Renseignez ici les caractéristiques du téléphone : "}
          >
            <FormRow label={"Modèle du Téléphone"} errorMessages={[]}>
              <Select title={SELECT_TITLE} options={PHONES_OPTIONS} id={"select-brand"} {...register("Select", { required: false })} />
            </FormRow>
            <FormRow label={"Année d'achat"} errorMessages={[]}>
              <InputComponent
                type="text"
                defaultValue=""
                {...register("phoneYear", { required: false })}
              />
            </FormRow>
          </FormSection>
          <ValidationButton type="submit">Envoyer</ValidationButton>
        </form>
      </main>
    </div>
  );
};

export default Home;
